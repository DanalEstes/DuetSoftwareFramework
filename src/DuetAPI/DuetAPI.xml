<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DuetAPI</name>
    </assembly>
    <members>
        <member name="T:DuetAPI.CodeChannel">
            <summary>
            Enumeration of every available code channel
            <seealso cref="T:DuetAPI.Commands.Code"/>
            <seealso cref="T:DuetAPI.Commands.SimpleCode"/>
            <seealso cref="T:DuetAPI.Machine.Channels"/>
            </summary>
        </member>
        <member name="F:DuetAPI.CodeChannel.HTTP">
            <summary>
            Code channel for HTTP requests
            </summary>
        </member>
        <member name="F:DuetAPI.CodeChannel.Telnet">
            <summary>
            Code channel for Telnet requests
            </summary>
        </member>
        <member name="F:DuetAPI.CodeChannel.File">
            <summary>
            Code channel for file prints
            </summary>
        </member>
        <member name="F:DuetAPI.CodeChannel.USB">
            <summary>
            Code channel for USB requests
            </summary>
        </member>
        <member name="F:DuetAPI.CodeChannel.AUX">
            <summary>
            Code channel for serial devices (e.g. PanelDue)
            </summary>
        </member>
        <member name="F:DuetAPI.CodeChannel.Daemon">
            <summary>
            Code channel for running triggers or config.g
            </summary>
        </member>
        <member name="F:DuetAPI.CodeChannel.CodeQueue">
            <summary>
            Code channel for the code queue that executes a couple of codes in-sync with moves
            </summary>
        </member>
        <member name="F:DuetAPI.CodeChannel.LCD">
            <summary>
            Code channel for auxiliary LCD devices (e.g. PanelOne)
            </summary>
        </member>
        <member name="F:DuetAPI.CodeChannel.SPI">
            <summary>
            Default code channel for requests over SPI
            </summary>
        </member>
        <member name="F:DuetAPI.CodeChannel.AutoPause">
            <summary>
            Code channel that executes macros on power fail, heater faults and filament out
            </summary>
        </member>
        <member name="T:DuetAPI.Commands.Acknowledge">
            <summary>
            Acknowledge a (partial) model update.
            </summary>
            <remarks>
            This command is only permitted in <see cref="F:DuetAPI.Connection.ConnectionMode.Subscribe"/> mode
            </remarks>
        </member>
        <member name="T:DuetAPI.Commands.BaseCommand">
            <summary>
            Base class of a command.
            When an instance of this class is processed in the control server, the connection identifier of the channel it was received from is assigned.
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.BaseCommand.#ctor">
            <summary>
            Creates a new instance of the BaseCommand
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.BaseCommand.Command">
            <summary>
            Name of the command.
            In the .NET library this is automatically set to the actual class name representing the command name.
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.BaseCommand.SourceConnection">
            <summary>
            The connection ID this command was received from. It is automatically overwritten by the control server
            once the full command has been deserialized. If this is 0, the command comes from an internal request.
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.BaseCommand.Invoke">
            <summary>
            Invokes the command implementation
            </summary>
            <returns>Result of the command</returns>
        </member>
        <member name="T:DuetAPI.Commands.Command">
            <summary>
            Base class of commands that do not return a result
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.Command.Execute">
            <summary>
            Reserved for the actual command implementation in the control server
            </summary>
            <returns>Asynchronous task</returns>
        </member>
        <member name="M:DuetAPI.Commands.Command.Invoke">
            <summary>
            Invokes the command implementation
            </summary>
            <returns>null</returns>
        </member>
        <member name="T:DuetAPI.Commands.Command`1">
            <summary>
            Base class of a command that returns a result
            </summary>
            <typeparam name="T">Type of the command result</typeparam>
        </member>
        <member name="M:DuetAPI.Commands.Command`1.Execute">
            <summary>
            Reserved for the actual command implementation in the control server
            </summary>
            <returns>Command result</returns>
        </member>
        <member name="M:DuetAPI.Commands.Command`1.Invoke">
            <summary>
            Invokes the command implementation
            </summary>
            <returns>Command result</returns>
        </member>
        <member name="T:DuetAPI.Commands.Code">
            <summary>
            A parsed representation of a generic G/M/T-code
            Line number support has not yet been implemented (TODO)
            </summary>
            <seealso cref="T:DuetAPI.Commands.CodeResult"/>
        </member>
        <member name="M:DuetAPI.Commands.Code.#ctor">
            <summary>
            Create an empty Code representation
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Code.Type">
            <summary>
            Type of the code. If no exact type could be determined, it is interpreted as a comment
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Code.Channel">
            <summary>
            Code channel to send this code to
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Code.MajorNumber">
            <summary>
            Major code number (e.g. 28 in G28)
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Code.MinorNumber">
            <summary>
            Minor code number (e.g. 3 in G54.3)
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Code.EnforceAbsoluteCoordinates">
            <summary>
            Whether absolute coordinates must be used regardless of the current mode (see G53)
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Code.Parameters">
            <summary>
            List of parsed code parameters (see <see cref="T:DuetAPI.Commands.CodeParameter"/> for further information)
            </summary>
            <seealso cref="T:DuetAPI.Commands.CodeParameter"/>
        </member>
        <member name="P:DuetAPI.Commands.Code.Comment">
            <summary>
            Comment of the G/M/T-code
            </summary>
            <remarks>
            The parser combines different comment segments and concatenates them as a single value.
            So for example a code like 'G28 (Do homing) ; via G28' causes the Comment field to be filled with 'Do homing via G28'
            </remarks>
        </member>
        <member name="P:DuetAPI.Commands.Code.IsPreProcessed">
            <summary>
            Indicates if the code has been preprocessed (see also <see cref="F:DuetAPI.Connection.ConnectionMode.Intercept"/>)
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Code.IsPostProcessed">
            <summary>
            Indicates if the code has been postprocessed (see also <see cref="F:DuetAPI.Connection.ConnectionMode.Intercept"/>)
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Code.IsFromMacro">
            <summary>
            Indicates if the code comes from a macro file
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Code.IsFromSystemMacro">
            <summary>
            Indicates if the code comes from a system macro file that RepRapFirmware requested
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Code.IsFromConfig">
            <summary>
            Indicates if this code is part of config.g
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Code.IsFromConfigOverride">
            <summary>
            Indicates if this code is part of config-override.g
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Code.FilePosition">
            <summary>
            File position in bytes (optional)
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.Code.GetParameter(System.Char)">
            <summary>
            Retrieve the parameter whose letter equals c. Note that this look-up is case-sensitive!
            </summary>
            <param name="c">Letter of the code parameter to find</param>
            <returns>The parsed parameter instance or null if none could be found</returns>
        </member>
        <member name="M:DuetAPI.Commands.Code.GetUnprecedentedString(System.Boolean)">
            <summary>
            Reconstruct an unprecedented string from the parameter list
            </summary>
            <param name="quoteStrings">Encapsulate strings in double quotes</param>
            <returns>Unprecedented string</returns>
        </member>
        <member name="M:DuetAPI.Commands.Code.ToString">
            <summary>
            Convert the parsed code back to a text-based G/M/T-code
            </summary>
            <returns>Reconstructed code string</returns>
        </member>
        <member name="M:DuetAPI.Commands.Code.ToShortString">
            <summary>
            Convert only the command portion to a text-based G/M/T-code (e.g. G28)
            </summary>
            <returns>Command fraction of the code</returns>
        </member>
        <member name="M:DuetAPI.Commands.Code.#ctor(System.String)">
            <summary>
            Create a parsed code representation from a text-based string
            This constructor parses the whole code and fills the class members where applicable
            </summary>
            <param name="codeString">The text-based G/M/T-code</param>
            <exception cref="T:DuetAPI.Commands.CodeParserException">Thrown if the code contains errors like unterminated strings or unterminated comments</exception>
        </member>
        <member name="T:DuetAPI.Commands.CodeParameter">
            <summary>
            Represents a parsed parameter of a G/M/T-code
            Initial parsing is done whenever a code is processed
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.CodeParameter.Letter">
            <summary>
            Letter of the code parameter (e.g. P in M106 P3)
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.CodeParameter.AsString">
            <summary>
            Unparsed string representation of the code parameter or an empty string if none present
            </summary>
        </member>
        <member name="F:DuetAPI.Commands.CodeParameter.ParsedValue">
            <summary>
            Internal parsed representation of the string value (one of string, int, uint, float, int[], uint[] or float[])
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.CodeParameter.#ctor(System.Char,System.String,System.Boolean)">
            <summary>
            Creates a new CodeParameter instance and parses value to a native data type if applicable
            </summary>
            <param name="letter">Letter of the code parameter</param>
            <param name="value">String representation of the value (also stored in <see cref="P:DuetAPI.Commands.CodeParameter.AsString"/>)</param>
            <param name="isString">Whether this is a string. This is set to true if the parameter was inside quotation marks.</param>
        </member>
        <member name="P:DuetAPI.Commands.CodeParameter.AsFloat">
            <summary>
            Float representation of the parsed value
            </summary>
            <exception cref="T:System.ArgumentException">Data type is not convertible</exception>
        </member>
        <member name="P:DuetAPI.Commands.CodeParameter.AsInt">
            <summary>
            Integer representation of the parsed value
            </summary>
            <exception cref="T:System.ArgumentException">Data type is not convertible</exception>
        </member>
        <member name="P:DuetAPI.Commands.CodeParameter.AsUInt">
            <summary>
            Unsigned integer representation of the parsed value
            </summary>
            <exception cref="T:System.ArgumentException">Data type is not convertible</exception>
        </member>
        <member name="P:DuetAPI.Commands.CodeParameter.AsBool">
            <summary>
            Boolean representation of the parsed value
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.CodeParameter.AsFloatArray">
            <summary>
            Float array representation of the parsed value
            </summary>
            <exception cref="T:System.ArgumentException">Data type is not convertible</exception>
        </member>
        <member name="P:DuetAPI.Commands.CodeParameter.AsIntArray">
            <summary>
            Integer array representation of the parsed value
            </summary>
            <exception cref="T:System.ArgumentException">Data type is not convertible</exception>
        </member>
        <member name="P:DuetAPI.Commands.CodeParameter.AsUIntArray">
            <summary>
            Unsigned integer array representation of the parsed value
            </summary>
            <exception cref="T:System.ArgumentException">Data type is not convertible</exception>
        </member>
        <member name="P:DuetAPI.Commands.CodeParameter.Type">
            <summary>
            Data type of the internally parsed value
            </summary>
        </member>
        <member name="T:DuetAPI.Commands.CodeParameterConverter">
            <summary>
            Converts a <see cref="T:DuetAPI.Commands.CodeParameter"/> instance to JSON
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.CodeParameterConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes a code parameter to JSON
            </summary>
            <param name="writer">JSON writer</param>
            <param name="serializer">JSON Serializer</param>
            <param name="value">Value to write</param>
        </member>
        <member name="M:DuetAPI.Commands.CodeParameterConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads a code parameters from JSON
            </summary>
            <param name="reader">JSON reader</param>
            <param name="objectType">Object type</param>
            <param name="existingValue">Existing value</param>
            <param name="serializer">JSON serializer</param>
            <returns>Deserialized CodeParameter</returns>
        </member>
        <member name="M:DuetAPI.Commands.CodeParameterConverter.CanConvert(System.Type)">
            <summary>
            Checks if the corresponding type can be converted
            </summary>
            <param name="objectType">Object type to check</param>
            <returns>Whether the object can be converted</returns>
        </member>
        <member name="T:DuetAPI.Commands.CodeParserException">
            <summary>
            Exception class that is thrown when a G/M/T-code could not be parsed
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.CodeParserException.#ctor">
            <summary>
            Creates a new CodeParserException
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.CodeParserException.#ctor(System.String)">
            <summary>
            Creates a new CodeParserException
            </summary>
            <param name="message">Exception message</param>
        </member>
        <member name="M:DuetAPI.Commands.CodeParserException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new CodeParserException
            </summary>
            <param name="message">Exception message</param>
            <param name="inner">Inner exception</param>
        </member>
        <member name="T:DuetAPI.Commands.CodeResult">
            <summary>
            List-based representation of a code result.
            Each item represents a <see cref="T:DuetAPI.Message"/> instance which can be easily converted to a string
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.CodeResult.#ctor">
            <summary>
            Create a new code result
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.CodeResult.#ctor(DuetAPI.MessageType,System.String)">
            <summary>
            Create a new code result with an initial message
            </summary>
            <param name="type">Message type</param>
            <param name="content">Message content</param>
        </member>
        <member name="M:DuetAPI.Commands.CodeResult.ToString">
            <summary>
            Converts the CodeResult to a string
            </summary>
            <returns>The CodeResult as a string</returns>
        </member>
        <member name="P:DuetAPI.Commands.CodeResult.IsSuccessful">
            <summary>
            Indicates if the code could complete without an error
            </summary>
        </member>
        <member name="T:DuetAPI.Commands.CodeType">
            <summary>
            Type of a generic G/M/T-code. If none is applicable, it is treated as a comment
            </summary>
        </member>
        <member name="F:DuetAPI.Commands.CodeType.Comment">
            <summary>
            Comment type (ignored during execution)
            </summary>
        </member>
        <member name="F:DuetAPI.Commands.CodeType.GCode">
            <summary>
            G-code
            </summary>
        </member>
        <member name="F:DuetAPI.Commands.CodeType.MCode">
            <summary>
            M-code
            </summary>
        </member>
        <member name="F:DuetAPI.Commands.CodeType.TCode">
            <summary>
            T-code
            </summary>
        </member>
        <member name="T:DuetAPI.Commands.GetFileInfo">
            <summary>
            Analyse a G-code file and return an instance of <see cref="T:DuetAPI.ParsedFileInfo"/> when ready
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.GetFileInfo.FileName">
            <summary>
            The filename to extract information from
            </summary>
        </member>
        <member name="T:DuetAPI.Commands.GetMachineModel">
            <summary>
            Get the current RepRapFirmware machine model
            </summary>
            <seealso cref="T:DuetAPI.Machine.MachineModel"/>
        </member>
        <member name="T:DuetAPI.Commands.Ignore">
            <summary>
            Ignore the code to intercept and allow it to be processed without any modifications
            </summary>
            <remarks>
            This command is only permitted in <see cref="F:DuetAPI.Connection.ConnectionMode.Intercept"/> mode
            </remarks>
        </member>
        <member name="T:DuetAPI.Commands.Resolve">
            <summary>
            Resolve the code to intercept and return the given message details for its completion.
            </summary>
            <remarks>
            This command is only permitted in <see cref="F:DuetAPI.Connection.ConnectionMode.Intercept"/> mode
            </remarks>
        </member>
        <member name="P:DuetAPI.Commands.Resolve.Type">
            <summary>
            Type of the resolving message
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.Resolve.Content">
            <summary>
            Content of the resolving message
            </summary>
        </member>
        <member name="T:DuetAPI.Commands.ResolvePath">
            <summary>
            Resolve a RepRapFirmware-style path to an actual file path
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.ResolvePath.Path">
            <summary>
            Path that is RepRapFirmware-compatible
            </summary>
        </member>
        <member name="T:DuetAPI.Commands.BaseResponse">
            <summary>
            Base class for every response to a command request.
            An instance of this is returned when a regular <see cref="T:DuetAPI.Commands.Command"/> has finished.
            </summary>
            <seealso cref="T:DuetAPI.Commands.Response`1"/>
            <seealso cref="T:DuetAPI.Commands.ErrorResponse"/>
        </member>
        <member name="P:DuetAPI.Commands.BaseResponse.Success">
            <summary>
            Indicates if the command could complete without a runtime error
            </summary>
        </member>
        <member name="T:DuetAPI.Commands.Response`1">
            <summary>
            Response of a <see cref="T:DuetAPI.Commands.Command`1"/>
            </summary>
            <typeparam name="T">Type of the response</typeparam>
        </member>
        <member name="P:DuetAPI.Commands.Response`1.Result">
            <summary>
            Result of the command
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.Response`1.#ctor(`0)">
            <summary>
            Creates a new Response instance
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:DuetAPI.Commands.ErrorResponse">
            <summary>
            Response indicating a runtime exception during the internal processing of a command
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.ErrorResponse.ErrorType">
            <summary>
            Name of the .NET exception
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.ErrorResponse.ErrorMessage">
            <summary>
            Message of the .NET exception
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.ErrorResponse.#ctor">
            <summary>
            Creates a new response indicating a runtime error.
            This constructor is only used for deserialization
            </summary>
        </member>
        <member name="M:DuetAPI.Commands.ErrorResponse.#ctor(System.Exception)">
            <summary>
            Creates a new response indicating a runtime error
            </summary>
            <param name="e">Exception to report</param>
        </member>
        <member name="T:DuetAPI.Commands.SimpleCode">
            <summary>
            Perform a simple G/M/T-code
            </summary>
            <remarks>
            Internally the code passed is populated as a full <see cref="P:DuetAPI.Commands.SimpleCode.Code"/> instance and on completion
            its CodeResult is transformed back into a basic string. This is useful for minimal extensions
            that do not require granular control of the code details
            </remarks>
        </member>
        <member name="P:DuetAPI.Commands.SimpleCode.Code">
            <summary>
            Code to parse and execute
            </summary>
        </member>
        <member name="P:DuetAPI.Commands.SimpleCode.Channel">
            <summary>
            Destination channel
            </summary>
        </member>
        <member name="T:DuetAPI.Connection.ConnectionMode">
            <summary>
            Supported connection types for client connections
            </summary>
        </member>
        <member name="F:DuetAPI.Connection.ConnectionMode.Unknown">
            <summary>
            Unknown connection type. If this is used, the connection is immediately terminated
            </summary>
        </member>
        <member name="F:DuetAPI.Connection.ConnectionMode.Command">
            <summary>
            Command mode. This allows clients to send general purpose messages to the control server like
            G-codes or requests of the full object model
            </summary>
            <seealso cref="T:DuetAPI.Connection.InitMessages.CommandInitMessage"/>
        </member>
        <member name="F:DuetAPI.Connection.ConnectionMode.Intercept">
            <summary>
            Interception mode. This allows clients to intercept G/M/T-codes before or after they are initially processed
            </summary>
            <seealso cref="T:DuetAPI.Connection.InitMessages.InterceptInitMessage"/>
        </member>
        <member name="F:DuetAPI.Connection.ConnectionMode.Subscribe">
            <summary>
            Subscription mode. In this mode object model updates are transmitted to the client after each update
            </summary>
            <seealso cref="T:DuetAPI.Connection.InitMessages.SubscribeInitMessage"/>
        </member>
        <member name="T:DuetAPI.Connection.Defaults">
            <summary>
            Static class that holds the connection defaults
            </summary>
        </member>
        <member name="F:DuetAPI.Connection.Defaults.SocketPath">
            <summary>
            Default path to the UNIX file socket
            </summary>
        </member>
        <member name="F:DuetAPI.Connection.Defaults.Channel">
            <summary>
            Default code channel to use
            </summary>
        </member>
        <member name="T:DuetAPI.Connection.InitMessages.ClientInitMessage">
            <summary>
            An instance of this class is sent from the client to the server as a response to the <see cref="T:DuetAPI.Connection.InitMessages.ServerInitMessage"/>.
            It allows a client to select the connection mode (<see cref="T:DuetAPI.Connection.ConnectionMode"/>).
            </summary>
        </member>
        <member name="P:DuetAPI.Connection.InitMessages.ClientInitMessage.Mode">
            <summary>
            Desired mode of the new connection
            </summary>
        </member>
        <member name="T:DuetAPI.Connection.InitMessages.CommandInitMessage">
            <summary>
            Enter command-based connection mode
            In this conneciton mode nearly all of the commands in the <see cref="N:DuetAPI.Commands"/> namespace can be used
            </summary>
        </member>
        <member name="M:DuetAPI.Connection.InitMessages.CommandInitMessage.#ctor">
            <summary>
            Creates a new init message instance
            </summary>
        </member>
        <member name="T:DuetAPI.Connection.InitMessages.InterceptInitMessage">
            <summary>
            Enter interception mode
            Whenever a code is received, the connection must respond with one of
            - <cref see="DuetAPI.Commands.Ignore">Ignore</cref> to pass through the code without modifications
            - <cref see="DuetAPI.Commands.Resolve">Resolve</cref> to resolve the current code and to return a message
            In addition the interceptor may issue custom commands once a code has been received
            Do not attempt to perform commands before an intercepting code is received, else the order of
            command execution cannot be guaranteed
            </summary>
        </member>
        <member name="M:DuetAPI.Connection.InitMessages.InterceptInitMessage.#ctor">
            <summary>
            Creates a new init message instance
            </summary>
        </member>
        <member name="P:DuetAPI.Connection.InitMessages.InterceptInitMessage.InterceptionMode">
            <summary>
            Intercept codes either before they are internally processed (pre)
            or intercept them before they are forwarded to RepRapFirmware (post)
            </summary>
        </member>
        <member name="T:DuetAPI.Connection.InitMessages.ServerInitMessage">
            <summary>
            An instance of this class is sent by the server to the client in JSON format once a connection has been established.
            </summary>
        </member>
        <member name="P:DuetAPI.Connection.InitMessages.ServerInitMessage.Version">
            <summary>
            Version of the server-side API. A client is supposed to check if this API level s greater than or equal
            to this value once a connection has been etablished in order to ensure that all of the required commands
            are actually supported by the control server.
            </summary>
        </member>
        <member name="P:DuetAPI.Connection.InitMessages.ServerInitMessage.Id">
            <summary>
            Unique connection ID assigned by the control server to allow clients to track their commands
            </summary>
        </member>
        <member name="T:DuetAPI.Connection.InitMessages.SubscribeInitMessage">
            <summary>
            Enter subscription mode and receive either the full object model or parts of it after every update
            </summary>
        </member>
        <member name="M:DuetAPI.Connection.InitMessages.SubscribeInitMessage.#ctor">
            <summary>
            Creates a new init message instance
            </summary>
        </member>
        <member name="P:DuetAPI.Connection.InitMessages.SubscribeInitMessage.SubscriptionMode">
            <summary>
            Type of the subscription
            </summary>
        </member>
        <member name="T:DuetAPI.Connection.InterceptionMode">
            <summary>
            Type of the intercepting connection
            </summary>
            <seealso cref="T:DuetAPI.Connection.InitMessages.InterceptInitMessage"/>
        </member>
        <member name="F:DuetAPI.Connection.InterceptionMode.Pre">
            <summary>
            Intercept codes before they are internally processed by the control server
            </summary>
        </member>
        <member name="F:DuetAPI.Connection.InterceptionMode.Post">
            <summary>
            Intercept codes after the initial processing of the control server but before they are forwarded
            to the RepRapFirmware controller
            </summary>
        </member>
        <member name="T:DuetAPI.Connection.SubscriptionMode">
            <summary>
            Type of the model subscription
            </summary>
            <seealso cref="T:DuetAPI.Connection.InitMessages.SubscribeInitMessage"/>
        </member>
        <member name="F:DuetAPI.Connection.SubscriptionMode.Full">
            <summary>
            Receive full object model after every update
            </summary>
        </member>
        <member name="F:DuetAPI.Connection.SubscriptionMode.Patch">
            <summary>
            Receive only updated JSON fragments of the object model
            </summary>
        </member>
        <member name="T:DuetAPI.Machine.Channel">
            <summary>
            Information about a G/M/T-code channel. May be further expanded
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channel.Feedrate">
            <summary>
            Current feedrate in mm/s
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channel.RelativeExtrusion">
            <summary>
            Whether relative extrusion is being used
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channel.RelativePositioning">
            <summary>
            Whether relative positioning is being used
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channel.UsingInches">
            <summary>
            Whether inches are being used instead of mm
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.Channel.StackDepth">
            <summary>
            Depth of the stack
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Channel.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Channels">
            <summary>
            Information about the available G/M/T-code channels.
            <seealso cref="T:DuetAPI.CodeChannel"/>
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channels.HTTP">
            <summary>
            G/M/T-code channel for HTTP requests
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channels.Telnet">
            <summary>
            G/M/T-code channel for Telnet requests
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channels.File">
            <summary>
            G/M/T-code channel for file prints
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channels.USB">
            <summary>
            G/M/T-code channel for USB
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channels.AUX">
            <summary>
            G/M/T-code channel for AUX (UART/PanelDue)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channels.Daemon">
            <summary>
            G/M/T-code channel for Daemon (deals with config.g and triggers)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channels.CodeQueue">
            <summary>
            G/M/T-code channel for the code queue
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channels.LCD">
            <summary>
            G/M/T-code channel for AUX (UART/PanelDue)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channels.SPI">
            <summary>
            Default G/M/T-code channel for generic codes
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channels.AutoPause">
            <summary>
            Default G/M/T-code channel for generic codes
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Channels.Item(DuetAPI.CodeChannel)">
            <summary>
            Index operator for simple access via the <see cref="T:DuetAPI.CodeChannel"/> enum
            </summary>
            <param name="key">Channel to access</param>
            <returns></returns>
        </member>
        <member name="M:DuetAPI.Machine.Channels.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Electronics">
            <summary>
            Information about the electronics used
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Electronics.Type">
            <summary>
            Type name of the main board
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Electronics.Name">
            <summary>
            Full name of the main board
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Electronics.Revision">
            <summary>
            Revision of the main board
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Electronics.Firmware">
            <summary>
            Main firmware of the attached main board
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Electronics.ProcessorID">
            <summary>
            Processor ID of the main board
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Electronics.VIn">
            <summary>
            Input voltage details of the main board (in V or null if unknown)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Electronics.McuTemp">
            <summary>
            MCU temperature details of the main board (in degC or null if unknown)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Electronics.ExpansionBoards">
             <summary>
             Information about attached expansion boards
             </summary>
            <seealso cref="T:DuetAPI.Machine.ExpansionBoard"/>
        </member>
        <member name="M:DuetAPI.Machine.Electronics.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.ExpansionBoard">
            <summary>
            Represents information about an attached expansion board
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExpansionBoard.Name">
            <summary>
            Name of the attached expansion board
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExpansionBoard.Revision">
            <summary>
            Revision of the expansion board
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExpansionBoard.Firmware">
            <summary>
            Details about the firmware running on this expansion board
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExpansionBoard.VIn">
            <summary>
            Set of the minimum, maximum and current input voltage (in V or null if unknown)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExpansionBoard.McuTemp">
            <summary>
            Set of the minimum, maximum and current MCU temperature (in degC or null if unknown)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExpansionBoard.MaxHeaters">
            <summary>
            How many heaters can be attached to this board
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExpansionBoard.MaxMotors">
            <summary>
            How many drives can be attached to this board
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.ExpansionBoard.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Firmware">
            <summary>
            Information about a firmware version
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Firmware.Name">
            <summary>
            Name of the firmware
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Firmware.Version">
            <summary>
            Version of the firmware
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Firmware.Date">
            <summary>
            Date of the firmware (i.e. when it was compiled)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Firmware.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.MinMaxCurrent`1">
            <summary>
            Provides minimum, maximum and current values
            </summary>
            <typeparam name="T">Type of each value</typeparam>
        </member>
        <member name="P:DuetAPI.Machine.MinMaxCurrent`1.Current">
            <summary>
            Current value
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MinMaxCurrent`1.Min">
            <summary>
            Minimum value
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MinMaxCurrent`1.Max">
            <summary>
            Maximum value
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.MinMaxCurrent`1.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Fan">
            <summary>
            Class representing information about an attached fan
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Fan.Value">
            <summary>
            Value of the fan on a scale between 0 to 1
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Fan.Name">
            <summary>
            Name of the fan
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Fan.Rpm">
            <summary>
            Current RPM of this fan or null if unknown/unset
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Fan.Inverted">
            <summary>
            Whether the PWM signal of this fan is inverted
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Fan.Frequency">
            <summary>
            Frequency of the fan (in Hz) or null if unknown/unset
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Fan.Min">
            <summary>
            Minimum value of this fan on a scale between 0 to 1
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Fan.Max">
            <summary>
            Maximum value of this fan on a scale between 0 to 1
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Fan.Blip">
            <summary>
            Blip value indicating how long the fan is supposed to run at 100% when turning it on to get it started (in s)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Fan.Thermostatic">
            <summary>
            Thermostatic control parameters
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Fan.Pin">
            <summary>
            Pin number of the assigned fan or null if unknown/unset
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Fan.Clone">
            <summary>
            Creates a copy of this instance
            </summary>
            <returns>A copy of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Thermostatic">
            <summary>
            Thermostatic parameters of a fan
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Thermostatic.Control">
            <summary>
            Defines whether thermostatic control is enabled
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Thermostatic.Heaters">
            <summary>
            The heaters to monitor (indices)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Thermostatic.Temperature">
            <summary>
            Minimum temperature required to turn on the fan (in degC or null if unknown)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Thermostatic.Clone">
            <summary>
            Create a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.BedOrChamber">
            <summary>
            Information about a bed or chamber heater
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.BedOrChamber.Active">
            <summary>
            Active temperatures (in degC)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.BedOrChamber.Standby">
            <summary>
            Standby temperatures (in degC)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.BedOrChamber.Name">
            <summary>
            Name of the bed or chamber or null if unset
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.BedOrChamber.Heaters">
            <summary>
            Heaters controlled by this bed or chamber (indices)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.BedOrChamber.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.ExtraHeater">
            <summary>
            Information about an extra heater (virtual)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExtraHeater.Current">
            <summary>
            Current temperature (in degC)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExtraHeater.Name">
            <summary>
            Name of the extra heater
            </summary>
            <remarks>
            This must not be set to null
            </remarks>
        </member>
        <member name="P:DuetAPI.Machine.ExtraHeater.State">
            <summary>
            State of the extra heater or null if unknown/unset
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExtraHeater.Sensor">
            <summary>
            Sensor number (thermistor index) of the extra heater or null if unknown/unset
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.ExtraHeater.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Heat">
            <summary>
            Information about the heat subsystem
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Heat.Beds">
            <summary>
            List of configured beds
            </summary>
            <remarks>
            This may contain null items
            </remarks>
            <seealso cref="T:DuetAPI.Machine.BedOrChamber"/>
        </member>
        <member name="P:DuetAPI.Machine.Heat.Chambers">
            <summary>
            List of configured chambers 
            </summary>
            <remarks>
            This may contain null items
            </remarks>
            <seealso cref="T:DuetAPI.Machine.BedOrChamber"/>
        </member>
        <member name="P:DuetAPI.Machine.Heat.ColdExtrudeTemperature">
            <summary>
            Minimum required temperature for extrusion moves (in degC)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Heat.ColdRetractTemperature">
            <summary>
            Minimum required temperature for retraction moves (in degC)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Heat.Extra">
            <summary>
            List of configured extra heaters
            </summary>
            <seealso cref="T:DuetAPI.Machine.ExtraHeater"/>
        </member>
        <member name="P:DuetAPI.Machine.Heat.Heaters">
            <summary>
            List of configured heaters
            </summary>
            <seealso cref="T:DuetAPI.Machine.Heater"/>
        </member>
        <member name="M:DuetAPI.Machine.Heat.Clone">
            <summary>
            Creates a copy of this instance
            </summary>
            <returns>A copy of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Heater">
            <summary>
            Information about a heater
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Heater.Current">
            <summary>
            Current temperature of the heater (in degC)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Heater.Name">
            <summary>
            Name of the heater or null if unset
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Heater.State">
            <summary>
            State of the heater
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Heater.Model">
            <summary>
            Information about the heater model
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Heater.Max">
            <summary>
            Maximum allowed temperature for this heater (in degC)
            </summary>
            <remarks>
            This is only temporary and should be replaced by a representation of the heater protection as in RRF
            </remarks>
        </member>
        <member name="P:DuetAPI.Machine.Heater.Sensor">
            <summary>
            Sensor number (thermistor index) of this heater or null if unknown
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Heater.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.HeaterModel">
            <summary>
            Information about the way the heater heats up
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.HeaterModel.Gain">
            <summary>
            Gain value or null if unknown
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.HeaterModel.TimeConst">
            <summary>
            Time constant or null if unknown
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.HeaterModel.DeadTime">
            <summary>
            Dead time of this heater or null if unknown
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.HeaterModel.MaxPwm">
            <summary>
            Maximum PWM or null if unknown
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.HeaterModel.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.HeaterState">
            <summary>
            State of a heater (also see RepRapFirmware)
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.HeaterState.Off">
            <summary>
            Heater is turned off
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.HeaterState.Standby">
            <summary>
            Heater is in standby mode
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.HeaterState.Active">
            <summary>
            Heater is active
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.HeaterState.Tuning">
            <summary>
            Heater is being tuned
            </summary>
        </member>
        <member name="T:DuetAPI.Machine.Job">
            <summary>
            Information about the current file job (if any)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Job.File">
            <summary>
            Information about the file being processed
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Job.FilePosition">
            <summary>
            Current position in the file being processed (in bytes or null)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Job.LastFileName">
            <summary>
            Name of the last file processed or null if none
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Job.LastFileSimulated">
            <summary>
            Indicates if the last file processed was simulated
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Job.ExtrudedRaw">
            <summary>
            Virtual amounts of extruded filament according to the G-code file (in mm)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Job.Duration">
            <summary>
            Total duration of the current job (in s)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Job.Layer">
            <summary>
            Number of the current layer or 0 if none has been started yet
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Job.LayerTime">
            <summary>
            Time elapsed since the beginning of the current layer (in s)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Job.Layers">
            <summary>
            Information about the past layers
            </summary>
            <seealso cref="P:DuetAPI.Machine.Job.Layer"/>
        </member>
        <member name="P:DuetAPI.Machine.Job.WarmUpDuration">
            <summary>
            Time needed to heat up the heaters (in s)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Job.TimesLeft">
            <summary>
            Estimated times left
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Job.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Layer">
            <summary>
            Information about a layer from a file being printed.
            Do not change these properties after an instance was added to the object model
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Layer.Duration">
            <summary>
            Duration of the layer (in s or null if unknown)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Layer.Height">
            <summary>
            Height of the layer (in mm or null if unknown)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Layer.Filament">
            <summary>
            Actual amount of filament extruded during this layer (in mm)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Layer.FractionPrinted">
            <summary>
            Fraction of the file printed during this layer (0..1 or null if unknown)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Layer.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>Clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.TimesLeft">
            <summary>
            Estimations about the times left
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.TimesLeft.File">
            <summary>
            Time left based on file progress (in s or null)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.TimesLeft.Filament">
            <summary>
            Time left based on filament consumption (in s or null)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.TimesLeft.Layer">
            <summary>
            Time left based on the layer progress (in s or null)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.TimesLeft.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.MachineModel">
            <summary>
            Representation of the full machine model.
            
            In the future this class will be further expanded by INotifyPropertyChanged and IObservableCollection interfaces.
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Channels">
            <summary>
            Information about every available G/M/T-code channel
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Electronics">
            <summary>
            Information about the main and expansion boards
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Fans">
            <summary>
            Information about the fans
            </summary>
            <seealso cref="T:DuetAPI.Machine.Fan"/>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Heat">
            <summary>
            Information about the heat subsystem
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Job">
            <summary>
            Information about the current file job (if any)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.MessageBox">
            <summary>
            Information about message box requests
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Messages">
            <summary>
            Generic messages that do not belong explicitly to codes being executed.
            This includes status messages, generic errors and outputs generated by M118
            </summary>
            <seealso cref="T:DuetAPI.Message"/>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Move">
            <summary>
            Information about the move subsystem
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Network">
            <summary>
            Information about connected network adapters
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Scanner">
            <summary>
            Information about the 3D scanner subsystem
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Sensors">
            <summary>
            Information about connected sensors including Z-probes and endstops
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Spindles">
            <summary>
            Information about CNC spindles
            </summary>
            <seealso cref="T:DuetAPI.Machine.Spindle"/>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.State">
            <summary>
            Information about the machine state
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Storages">
            <summary>
            Information about the configured storage systems
            </summary>
            <seealso cref="T:DuetAPI.Machine.Storage"/>
        </member>
        <member name="P:DuetAPI.Machine.MachineModel.Tools">
            <summary>
            Information about configured tools
            </summary>
            <seealso cref="T:DuetAPI.Machine.Tool"/>
        </member>
        <member name="M:DuetAPI.Machine.MachineModel.Clone">
            <summary>
            Creates a duplicate of the full object model
            </summary>
            <returns>A clone of this model</returns>
        </member>
        <member name="T:DuetAPI.Machine.MessageBox">
            <summary>
            Information about the message box to show
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MessageBox.Mode">
            <summary>
            Mode of the message box to display or null if none is shown
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MessageBox.Title">
            <summary>
            Title of the message box
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MessageBox.Message">
            <summary>
            Content of the message box
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.MessageBox.AxisControls">
            <summary>
            Optional axis movement controls to show (axis indices)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.MessageBox.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.MessageBoxMode">
            <summary>
            Supported modes of displaying a message box
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MessageBoxMode.NoButtons">
            <summary>
            Display a message box without any buttons
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MessageBoxMode.CloseOnly">
            <summary>
            Display a message box with only a Close button
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MessageBoxMode.OkOnly">
            <summary>
            Display a message box with only an Ok button which is supposed to send M292 when pressed
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MessageBoxMode.OkCancel">
            <summary>
            Display a message box with an Ok button that sends M292 P0 or a cancel button that sends M292 P1 when clicked
            </summary>
        </member>
        <member name="T:DuetAPI.Machine.Axis">
            <summary>
            Information about a configured axis
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Axis.Letter">
            <summary>
            Letter of the axis
            </summary>
            <remarks>
            This must be upper-case
            </remarks>
        </member>
        <member name="P:DuetAPI.Machine.Axis.Drives">
            <summary>
            Array of the drives used (indices)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Axis.Homed">
            <summary>
            Whether or not the axis is homed
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Axis.MachinePosition">
            <summary>
            Current machine position (in mm or null if unknown/unset)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Axis.Min">
            <summary>
            Minimum travel of this axis (in mm or null if unknown/unset)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Axis.Max">
            <summary>
            Maximum travel of this axis (in mm or null if unknown/unset)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Axis.Visible">
            <summary>
            Whether or not the axis is visible
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Axis.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.CurrentMove">
            <summary>
            Information about the current move
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.CurrentMove.RequestedSpeed">
            <summary>
            Requested speed of the current move (in mm/s)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.CurrentMove.TopSpeed">
            <summary>
            Top speed of the current move (in mm/s)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.CurrentMove.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Drive">
            <summary>
            Information about a drive
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Drive.Position">
            <summary>
            Current user position of this drive (in mm)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Drive.Microstepping">
            <summary>
            Information about the configured microstepping
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Drive.Current">
            <summary>
            Configured current of this drive (in mA)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Drive.Acceleration">
            <summary>
            Acceleration of this drive (in mm/s^2)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Drive.MinSpeed">
            <summary>
            Minimum allowed speed for this drive (in mm/s)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Drive.MaxSpeed">
            <summary>
            Maximum allowed speed for this drive (in mm/s)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Drive.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.DriveMicrostepping">
            <summary>
            Information about configured microstepping
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.DriveMicrostepping.Value">
            <summary>
            Microstepping value (e.g. x16)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.DriveMicrostepping.Interpolated">
            <summary>
            Whether the microstepping is interpolated
            </summary>
            <remarks>
            This may not be supported on all boards.
            </remarks>
        </member>
        <member name="M:DuetAPI.Machine.DriveMicrostepping.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Extruder">
            <summary>
            Information about an extruder drive
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.Extruder.Drives">
            <summary>
            Drive of this extruder
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Extruder.Factor">
            <summary>
            Extrusion factor to use (1.0 equals 100%)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Extruder.Nonlinear">
            <summary>
            Nonlinear extrusion parameters (see M592)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Extruder.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.ExtruderNonlinear">
            <summary>
            Nonlinear extrusion parameters (see M592)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExtruderNonlinear.A">
            <summary>
            A coefficient in the extrusion formula
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExtruderNonlinear.B">
            <summary>
            B coefficient in the extrusion formula
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExtruderNonlinear.UpperLimit">
            <summary>
            Upper limit of the nonlinear extrusion compensation
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.ExtruderNonlinear.Temperature">
            <summary>
            Reserved for future use, for the temperature at which these values are valid (in degC)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.ExtruderNonlinear.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Geometry">
            <summary>
            Information about the configured geometry
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Geometry.Type">
            <summary>
            Currently configured geometry type or null if unknown
            </summary>
            <seealso cref="T:DuetAPI.Machine.GeometryType"/>
        </member>
        <member name="M:DuetAPI.Machine.Geometry.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.GeometryType">
            <summary>
            List of supported geometry types
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.GeometryType.Cartesian">
            <summary>
            Cartesian geometry
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.GeometryType.CoreXY">
            <summary>
            CoreXY geometry
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.GeometryType.CoreXYU">
            <summary>
            CoreXY geometry with extra U axis
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.GeometryType.CoreXYUV">
            <summary>
            CoreXY geometry with extra UV axes
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.GeometryType.CoreXZ">
            <summary>
            CoreXZ geometry
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.GeometryType.Hangprinter">
            <summary>
            Hangprinter geometry
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.GeometryType.Delta">
            <summary>
            Delta geometry
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.GeometryType.Polar">
            <summary>
            Polar geometry
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.GeometryType.RotaryDelta">
            <summary>
            Rotary delta geometry
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.GeometryType.Scara">
            <summary>
            SCARA geometry
            </summary>
        </member>
        <member name="T:DuetAPI.Machine.Idle">
            <summary>
            Idle factor parameters for automatic motor current reduction
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Idle.Timeout">
            <summary>
            Idle timeout after which the stepper motor currents are reduced (in s)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Idle.Factor">
            <summary>
            Motor current reduction factor (on a scale between 0 to 1)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Idle.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Move">
            <summary>
            Information about the move subsystem
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Move.Axes">
            <summary>
            List of the configured axes
            </summary>
            <seealso cref="T:DuetAPI.Machine.Axis"/>
        </member>
        <member name="P:DuetAPI.Machine.Move.BabystepZ">
            <summary>
            Current babystep amount in Z direction (in mm)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Move.CurrentMove">
            <summary>
            Information about the current move
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Move.Compensation">
            <summary>
            Name of the currently used bed compensation
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Move.Drives">
            <summary>
            List of configured drives
            </summary>
            <seealso cref="T:DuetAPI.Machine.Drive"/>
        </member>
        <member name="P:DuetAPI.Machine.Move.Extruders">
            <summary>
            List of configured extruders
            </summary>
            <seealso cref="T:DuetAPI.Machine.Extruder"/>
        </member>
        <member name="P:DuetAPI.Machine.Move.Geometry">
            <summary>
            Information about the currently configured geometry
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Move.Idle">
            <summary>
            Idle current reduction parameters
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Move.SpeedFactor">
            <summary>
            Speed factor applied to every regular move (1.0 equals 100%)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Move.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.InterfaceType">
            <summary>
            Supported types of network interfaces
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.InterfaceType.WiFi">
            <summary>
            Wireless network interface
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.InterfaceType.LAN">
            <summary>
            Wired network interface
            </summary>
        </member>
        <member name="T:DuetAPI.Machine.Network">
            <summary>
            Information about the network subsystem
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Network.Name">
            <summary>
            Name of the machine
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Network.Password">
            <summary>
            Password required to access this machine
            </summary>
            <remarks>
            This concept is deprecated and may be dropped in favour of user authentication in the future
            </remarks>
        </member>
        <member name="P:DuetAPI.Machine.Network.Interfaces">
            <summary>
            List of available network interfaces
            </summary>
            <seealso cref="T:DuetAPI.Machine.NetworkInterface"/>
        </member>
        <member name="M:DuetAPI.Machine.Network.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.NetworkInterface">
            <summary>
            Information about a network interface
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.NetworkInterface.Type">
            <summary>
            Type of this network interface
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.NetworkInterface.FirmwareVersion">
            <summary>
            Version of the network interface or null if unknown.
            This is primarily intended for the ESP8266-based network interfaces as used on the Duet WiFi
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.NetworkInterface.Speed">
            <summary>
            Speed of the network interface (in MBit, null if unknown, 0 if not connected)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.NetworkInterface.Signal">
            <summary>
            Signal of the WiFi adapter (only WiFi, in dBm)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.NetworkInterface.MacAddress">
            <summary>
            Physical address of the network adapter
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.NetworkInterface.ConfiguredIP">
            <summary>
            Configured IPv4 address of the network adapter
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.NetworkInterface.ActualIP">
            <summary>
            Actual IPv4 address of the network adapter
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.NetworkInterface.Subnet">
            <summary>
            Subnet of the network adapter
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.NetworkInterface.Gateway">
            <summary>
            Gateway of the network adapter
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.NetworkInterface.NumReconnects">
            <summary>
            Number of reconnect attempts or null if unknown
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.NetworkInterface.ActiveProtocols">
            <summary>
            List of active protocols
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.NetworkInterface.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.NetworkProtocol">
            <summary>
            Supported network protocols
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.NetworkProtocol.HTTP">
            <summary>
            HTTP protocol
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.NetworkProtocol.FTP">
            <summary>
            FTP protocol
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.NetworkProtocol.Telnet">
            <summary>
            Telnet protocol
            </summary>
        </member>
        <member name="T:DuetAPI.Machine.Scanner">
            <summary>
            Information about the 3D scanner subsystem
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Scanner.Progress">
            <summary>
            Progress of the current action (on a scale between 0 to 1)
            </summary>
            <remarks>
            Previous status responses used a scale of 0..100
            </remarks>
        </member>
        <member name="P:DuetAPI.Machine.Scanner.Status">
            <summary>
            Status of the 3D scanner
            </summary>
            <seealso cref="T:DuetAPI.Machine.ScannerStatus"/>
        </member>
        <member name="M:DuetAPI.Machine.Scanner.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.ScannerStatus">
            <summary>
            Possible states of the attached 3D scanner
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ScannerStatus.Disconnected">
            <summary>
            Scanner is disconnected (none present)
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ScannerStatus.Idle">
            <summary>
            Scanner is registered and idle
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ScannerStatus.Scanning">
            <summary>
            Scanner is scanning an object
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ScannerStatus.PostProcessing">
            <summary>
            Scanner is post-processing a file
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ScannerStatus.Calibrating">
            <summary>
            Scanner is calibrating
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ScannerStatus.Uploading">
            <summary>
            Scanner is uploading
            </summary>
        </member>
        <member name="T:DuetAPI.Machine.Endstop">
            <summary>
            Information about an endstop
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Endstop.Triggered">
            <summary>
            Whether or not the endstop is hit
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Endstop.Position">
            <summary>
            Position where the endstop is located
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Endstop.Type">
            <summary>
            Type of the endstop
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Endstop.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.EndstopPosition">
            <summary>
            Position of a configured endstop
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.EndstopPosition.None">
            <summary>
            Endstop is not configured
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.EndstopPosition.LowEnd">
            <summary>
            Endstop is configured to be hit at the low axis end
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.EndstopPosition.HighEnd">
            <summary>
            Endstop is configured to be hit at the high axis end
            </summary>
        </member>
        <member name="T:DuetAPI.Machine.EndstopType">
            <summary>
            Type of a configured endstop
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.EndstopType.ActiveLow">
            <summary>
            The signal of the endstop is pulled from HIGH to LOW when hit
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.EndstopType.ActiveHigh">
            <summary>
            The signal of the endstop is pulled from LOW to HIGH when hit
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.EndstopType.Probe">
            <summary>
            A probe is used for this endstop
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.EndstopType.MotorLoadDetection">
            <summary>
            Motor load detection is used for this endstop
            </summary>
        </member>
        <member name="T:DuetAPI.Machine.Probe">
            <summary>
            Information about a configured probe
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Probe.Type">
            <summary>
            Type of the configured probe
            </summary>
            <seealso cref="T:DuetAPI.Machine.ProbeType"/>
        </member>
        <member name="P:DuetAPI.Machine.Probe.Value">
            <summary>
            Current analog value of the probe
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Probe.SecondaryValues">
            <summary>
            Secondary value(s) of the probe
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Probe.Threshold">
            <summary>
            Configured trigger threshold (0..1023)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Probe.Speed">
            <summary>
            Probe speed (in mm/s)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Probe.DiveHeight">
            <summary>
            Dive height (in mm)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Probe.TriggerHeight">
            <summary>
            Z height at which the probe is triggered (in mm)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Probe.Inverted">
            <summary>
            Whether the probe signal is inverted
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Probe.RecoveryTime">
            <summary>
            Recovery time (in s)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Probe.TravelSpeed">
            <summary>
            Travel speed when probing multiple points (in mm/s)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Probe.MaxProbeCount">
            <summary>
            Maximum number of times to probe after a bad reading was determined
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Probe.Tolerance">
            <summary>
            Allowed tolerance deviation between two measures (in mm)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Probe.DisablesBed">
            <summary>
            Whether probing disables the bed heater(s)
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Probe.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.ProbeType">
            <summary>
            Supported probe types
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ProbeType.None">
            <summary>
            No probe
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ProbeType.Unmodulated">
            <summary>
            A simple umodulated probe (like dc42's infrared probe)
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ProbeType.Modulated">
            <summary>
            A modulated probe (like the original one shipped with the RepRapPro Ormerod)
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ProbeType.ActiveLow">
            <summary>
            A probe that pulls the signal from HIGH to LOW when triggered
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ProbeType.E0Switch">
            <summary>
            A probe that is connected to the E0 switch
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ProbeType.ActiveHigh">
            <summary>
            A probe that pulls the signal from LOW to HIGH when triggered
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ProbeType.E1Switch">
            <summary>
            A probe that is connected to the E1 switch
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ProbeType.ZSwitch">
            <summary>
            A probe that is connected to the Z switch
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ProbeType.UnfilteredActiveHigh">
            <summary>
            An unfiltered probe that pulls the signal from low to high when triggered (unfiltered for faster reaction)
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ProbeType.BLTouch">
            <summary>
            A BLTouch probe
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.ProbeType.MotorLoadDetection">
            <summary>
            Motor load detection
            </summary>
        </member>
        <member name="T:DuetAPI.Machine.Sensors">
            <summary>
            Information about sensors
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Sensors.Endstops">
            <summary>
            List of configured endstops
            </summary>
            <seealso cref="T:DuetAPI.Machine.Endstop"/>
        </member>
        <member name="P:DuetAPI.Machine.Sensors.Probes">
            <summary>
            List of configured probes
            </summary>
            <seealso cref="T:DuetAPI.Machine.Probe"/>
        </member>
        <member name="M:DuetAPI.Machine.Sensors.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Spindle">
            <summary>
            Information about a CNC spindle
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Spindle.Active">
            <summary>
            Active RPM
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Spindle.Current">
            <summary>
            Current RPM
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Spindle.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.MachineMode">
            <summary>
            Possible operation modes of the machine
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineMode.FFF">
            <summary>
            Filament Fused Fabrication (default)
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineMode.CNC">
            <summary>
            Computer Numerical Control
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineMode.Laser">
            <summary>
            Laser operation mode (e.g. laser cutters)
            </summary>
        </member>
        <member name="T:DuetAPI.Machine.MachineStatus">
            <summary>
            Possible states of the firmware
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineStatus.Updating">
            <summary>
            The firmware is being updated
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineStatus.Off">
            <summary>
            The machine is turned off (i.e. the input voltage is too low for operation)
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineStatus.Halted">
            <summary>
            The machine has encountered an emergency stop and is ready to reset
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineStatus.Pausing">
            <summary>
            The machine is about to pause a file job
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineStatus.Paused">
            <summary>
            The machine has paused a file job
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineStatus.Resuming">
            <summary>
            The machine is about to resume a paused file job
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineStatus.Processing">
            <summary>
            The machine is processing a file job
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineStatus.Simulating">
            <summary>
            The machine is simulating a file job to determine its printing time
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineStatus.Busy">
            <summary>
            The machine is busy doing something (e.g. moving)
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineStatus.ChangingTool">
            <summary>
            The machine is changing the current tool
            </summary>
        </member>
        <member name="F:DuetAPI.Machine.MachineStatus.Idle">
            <summary>
            The machine is on but has nothing to do
            </summary>
        </member>
        <member name="T:DuetAPI.Machine.State">
            <summary>
            Information about the machine state
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.State.AtxPower">
            <summary>
            Whether or not ATX power is on
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.State.CurrentTool">
            <summary>
            Number of the currently selected tool or -1 if none is selected
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.State.Mode">
            <summary>
            Current mode of operation
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.State.Status">
            <summary>
            Current state of the machine
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.State.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Storage">
            <summary>
            Information about a storage device
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Storage.Mounted">
            <summary>
            Whether the storage device is mounted
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Storage.Speed">
            <summary>
            Speed of the storage device (in bytes/s or null if unknown)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Storage.Capacity">
            <summary>
            Total capacity of the storage device (in bytes)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Storage.Free">
            <summary>
            How much space is still available on this device (in bytes)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Storage.OpenFiles">
            <summary>
            Number of currently open files or null if unknown
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Storage.Path">
            <summary>
            Logical path of the storage device
            </summary>
        </member>
        <member name="M:DuetAPI.Machine.Storage.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Machine.Tool">
            <summary>
            Information about a configured tool
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Tool.Number">
            <summary>
            Number of the tool
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Tool.Active">
            <summary>
            Active temperatures of the associated heaters (in degC)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Tool.Standby">
            <summary>
            Standby temperatures of the associated heaters (in degC)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Tool.Name">
            <summary>
            Name of the tool or null if unset
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Tool.Filament">
            <summary>
            Name of the currently loaded filament
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Tool.Fans">
            <summary>
            List of associated fans (indices)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Tool.Heaters">
            <summary>
            List of associated heaters (indices)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Tool.Mix">
            <summary>
            Mix ratios of the associated extruder drives
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Tool.Spindle">
            <summary>
            Associated spindle (index)
            </summary>
        </member>
        <member name="P:DuetAPI.Machine.Tool.Axes">
            <summary>
            Associated axes. At present only X and Y can be mapped per tool.
            </summary>
            <remarks>
            The order is the same as the visual axes, so by default the layout is
            [
              [0],        // X
              [1]         // Y
            ]
            </remarks>
        </member>
        <member name="P:DuetAPI.Machine.Tool.Offsets">
            <summary>
            Axis offsets (in mm)
            This list is in the same order as <see cref="P:DuetAPI.Machine.Move.Axes"/>
            </summary>
            <seealso cref="T:DuetAPI.Machine.Axis"/>
        </member>
        <member name="M:DuetAPI.Machine.Tool.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.MessageType">
            <summary>
            Type of a generic message
            </summary>
        </member>
        <member name="F:DuetAPI.MessageType.Success">
            <summary>
            This is a success message
            </summary>
        </member>
        <member name="F:DuetAPI.MessageType.Warning">
            <summary>
            This is a warning message
            </summary>
        </member>
        <member name="F:DuetAPI.MessageType.Error">
            <summary>
            This is an error message
            </summary>
        </member>
        <member name="T:DuetAPI.Message">
            <summary>
            Generic container for messages
            </summary>
        </member>
        <member name="M:DuetAPI.Message.#ctor">
            <summary>
            Create a new message
            </summary>
        </member>
        <member name="M:DuetAPI.Message.#ctor(DuetAPI.MessageType,System.String)">
            <summary>
            Create a new message
            </summary>
            <param name="type">Message type</param>
            <param name="content">Message content</param>
        </member>
        <member name="M:DuetAPI.Message.Print">
            <summary>
            Print this message to the console
            </summary>
        </member>
        <member name="P:DuetAPI.Message.Time">
            <summary>
            Time at which the message was generated
            </summary>
        </member>
        <member name="P:DuetAPI.Message.Type">
            <summary>
            Type of this message
            </summary>
        </member>
        <member name="P:DuetAPI.Message.Content">
            <summary>
            Content of this message
            </summary>
        </member>
        <member name="M:DuetAPI.Message.ToString">
            <summary>
            Converts this message to a RepRapFirmware-style message
            </summary>
            <returns>RepRapFirmware-style message</returns>
        </member>
        <member name="M:DuetAPI.Message.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>Clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.ParsedFileInfo">
            <summary>
            Holds information about a parsed G-code file
            </summary>
        </member>
        <member name="P:DuetAPI.ParsedFileInfo.FileName">
            <summary>
            The filename of the G-code file
            </summary>
        </member>
        <member name="P:DuetAPI.ParsedFileInfo.Size">
            <summary>
            Size of the file
            </summary>
        </member>
        <member name="P:DuetAPI.ParsedFileInfo.LastModified">
            <summary>
            Date and time of the last modification or null if none is set 
            </summary>
        </member>
        <member name="P:DuetAPI.ParsedFileInfo.Height">
            <summary>
            Build height of the G-code job or 0 if not found (in mm)
            </summary>
        </member>
        <member name="P:DuetAPI.ParsedFileInfo.FirstLayerHeight">
            <summary>
            Height of the first layer or 0 if not found (in mm)
            </summary>
        </member>
        <member name="P:DuetAPI.ParsedFileInfo.LayerHeight">
            <summary>
            Height of each other layer or 0 if not found (in mm)
            </summary>
        </member>
        <member name="P:DuetAPI.ParsedFileInfo.NumLayers">
            <summary>
            Number of total layers or null if unknown
            </summary>
        </member>
        <member name="P:DuetAPI.ParsedFileInfo.Filament">
            <summary>
            Filament consumption per extruder drive (in mm)
            </summary>
        </member>
        <member name="P:DuetAPI.ParsedFileInfo.GeneratedBy">
            <summary>
            Name of the application that generated this file
            </summary>
        </member>
        <member name="P:DuetAPI.ParsedFileInfo.PrintTime">
            <summary>
            Estimated print time (in s)
            </summary>
        </member>
        <member name="P:DuetAPI.ParsedFileInfo.SimulatedTime">
            <summary>
            Estimated print time from G-code simulation (in s)
            </summary>
        </member>
        <member name="M:DuetAPI.ParsedFileInfo.Clone">
            <summary>
            Creates a clone of this instance
            </summary>
            <returns>A clone of this instance</returns>
        </member>
        <member name="T:DuetAPI.Utility.CharEnumConverter">
            <summary>
            Helper class for Newtonsoft.Json to convert char enums to strings and vice versa
            </summary>
        </member>
        <member name="M:DuetAPI.Utility.CharEnumConverter.CanConvert(System.Type)">
            <summary>
            Checks if the object can be converted
            </summary>
            <param name="objectType">Object type to check</param>
            <returns>Whether the object can be converted</returns>
        </member>
        <member name="M:DuetAPI.Utility.CharEnumConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes a char enum to JSON
            </summary>
            <param name="writer">JSON writer</param>
            <param name="serializer">JSON Serializer</param>
            <param name="value">Value to write</param>
        </member>
        <member name="M:DuetAPI.Utility.CharEnumConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads a char enum from JSON
            </summary>
            <param name="reader">JSON reader</param>
            <param name="objectType">Object type</param>
            <param name="existingValue">Existing value</param>
            <param name="serializer">JSON serializer</param>
            <returns>Deserialized char enum</returns>
        </member>
        <member name="T:DuetAPI.Utility.JsonHelper">
            <summary>
            Helper class for JSON serialization, deserialization, patch creation and patch application
            </summary>
        </member>
        <member name="F:DuetAPI.Utility.JsonHelper.DefaultSettings">
            <summary>
            Default JSON settings for serialization and deserialization.
            It is strongly recommended to use these settings with Newtonsoft.Json!
            </summary>
        </member>
        <member name="F:DuetAPI.Utility.JsonHelper.DefaultSerializer">
            <summary>
            Default JSON serializer.
            It is strongly recommended to use this serializer with Newtonsoft.Json!
            </summary>
        </member>
        <member name="M:DuetAPI.Utility.JsonHelper.DiffObject(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Create a JSON patch
            </summary>
            <param name="from">Source object</param>
            <param name="to">Updated object</param>
            <returns>JSON patch</returns>
            <seealso cref="M:DuetAPI.Utility.JsonHelper.PatchObject(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject)"/>
        </member>
        <member name="M:DuetAPI.Utility.JsonHelper.PatchObject(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Apply an arbitrary JSON patch
            </summary>
            <param name="obj">Object to patch</param>
            <param name="diff">JSON patch to apply</param>
        </member>
        <member name="M:DuetAPI.Utility.JsonHelper.PatchObject(System.Object,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Apply an arbitrary JSON patch
            </summary>
            <param name="obj">Object to patch</param>
            <param name="diff">JSON patch to apply</param>
            <seealso cref="M:DuetAPI.Utility.JsonHelper.DiffObject(Newtonsoft.Json.Linq.JObject,Newtonsoft.Json.Linq.JObject)"/>
        </member>
    </members>
</doc>
