<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DuetRestEndpoint</name>
    </assembly>
    <members>
        <member name="T:DuetRestEndpoint.Controllers.MachineController">
            <summary>
            Model View Controller for /machine requests
            </summary>
        </member>
        <member name="M:DuetRestEndpoint.Controllers.MachineController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{DuetRestEndpoint.Controllers.MachineController})">
            <summary>
            Create a new controller instance
            </summary>
            <param name="configuration">Launch configuration</param>
            <param name="logger">Logger instance</param>
        </member>
        <member name="M:DuetRestEndpoint.Controllers.MachineController.Get">
            <summary>
            WS /machine
            Provide WebSocket for continuous model updates. This is priarily used to keep DWC2 up-to-date
            </summary>
            <returns>WebSocket, HTTP status code: (400) Bad request, WebSocket code: (1001) DCS unavailable</returns>
        </member>
        <member name="M:DuetRestEndpoint.Controllers.MachineController.Status">
            <summary>
            GET /machine/status
            Retrieve the full object model as JSON.
            </summary>
            <returns>Machine object model as JSON text or HTTP status code: (503) Machine model unavailable</returns>
        </member>
        <member name="M:DuetRestEndpoint.Controllers.MachineController.DoCode(System.String)">
            <summary>
            POST machine/code
            Execute a G/M/T-code and return the G-code response when done.
            </summary>
            <param name="code">G/M/T-code to execute</param>
            <returns>G-Code response or HTTP status code: (500) Generic error occurred (502) Incompatible DCS version (503) DCS unavailable</returns>
        </member>
        <member name="M:DuetRestEndpoint.Controllers.MachineController.DownloadFile(System.String)">
            <summary>
            GET machine/files/{filename}
            Download the specified file.
            </summary>
            <param name="filename">File to download</param>
            <returns>File content or HTTP status code: (404) File not found (500) Generic error (502) Incompatible DCS (503) DCS unavailable</returns>
        </member>
        <member name="M:DuetRestEndpoint.Controllers.MachineController.UploadFile(System.String)">
            <summary>
            POST machine/files/{filename}
            Upload a file from the HTTP body and create the subdirectories if necessary.
            </summary>
            <param name="filename">Destination of the file to upload</param>
            <returns>HTTP status code: (204) File created (500) Generic error occurred (502) Incompatible DCS (503) DCS unavailable</returns>
        </member>
        <member name="M:DuetRestEndpoint.Controllers.MachineController.DeleteFile(System.String)">
            <summary>
            DELETE machine/files/{filename}
            Delete the given file or directory.
            </summary>
            <param name="filename">File or directory to delete</param>
            <returns>HTTP status code: (204) File or directory deleted (404) File not found (500) Generic error (502) Incompatible DCS (503) DCS unavailable</returns>
        </member>
        <member name="M:DuetRestEndpoint.Controllers.MachineController.GetFileinfo(System.String)">
            <summary>
            GET fileinfo/{filename}
            Retrieve file info for the specified file
            </summary>
            <param name="filename">G-code file to analyze</param>
            <returns>File info as JSON or HTTP status code: (404) File not found (500) Generic error (502) Incompatible DCS (503) DCS unavailable</returns>
        </member>
        <member name="T:DuetRestEndpoint.Controllers.ModelSocket">
            <summary>
            This class takes care of WebSocket-based communication.
            At the moment it is only used to provide continuous machine model updates.
            </summary>
        </member>
        <member name="M:DuetRestEndpoint.Controllers.ModelSocket.Process(Microsoft.AspNetCore.Http.HttpContext,System.Net.WebSockets.WebSocket)">
            <summary>
            Deal with a newly opened WebSocket
            </summary>
            <param name="context">HTTP context</param>
            <param name="webSocket">WebSocket connection</param>
            <returns></returns>
        </member>
        <member name="T:DuetRestEndpoint.Program">
            <summary>
            Main class of the ASP.NET Core endpoint
            </summary>
        </member>
        <member name="M:DuetRestEndpoint.Program.Main(System.String[])">
            <summary>
            Called when the application is launched
            </summary>
            <param name="args">Command-line arguments</param>
        </member>
        <member name="M:DuetRestEndpoint.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Creates a new WebHost
            </summary>
            <param name="args">Command-line arguments</param>
            <returns></returns>
        </member>
        <member name="T:DuetRestEndpoint.Services.ModelProvider">
            <summary>
            Static interface for retrieving and updating the serialized machine model
            </summary>
        </member>
        <member name="F:DuetRestEndpoint.Services.ModelProvider.IsConnected">
            <summary>
            This indicates if a connection could be established by the ModelService class
            </summary>
        </member>
        <member name="M:DuetRestEndpoint.Services.ModelProvider.Set(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Assign initial state of the object model.
            </summary>
            <remarks>May be only called when the full machine model is initially received</remarks>
            <param name="newModel">Full machine model</param>
        </member>
        <member name="M:DuetRestEndpoint.Services.ModelProvider.Update(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Update the full machine model with a chunk of new data
            </summary>
            <param name="diff">Difference to the last state</param>
        </member>
        <member name="M:DuetRestEndpoint.Services.ModelProvider.GetFull">
            <summary>
            Retrieve a full object model instance. This creates a clone to avoid race conditions
            </summary>
            <returns>Full object model of the machine</returns>
        </member>
        <member name="M:DuetRestEndpoint.Services.ModelProvider.WaitForUpdate(System.Threading.CancellationToken)">
            <summary>
            Wait for an update to occur
            </summary>
            <returns>Task that completes when an update has occurred</returns>
        </member>
        <member name="M:DuetRestEndpoint.Services.ModelProvider.GetPatch(Newtonsoft.Json.Linq.JObject@)">
            <summary>
            Retrieve a partial JSON patch since the last state represented by oldModel.
            In addition the object in oldModel is updated with the current state
            </summary>
            <param name="oldModel">Last known object model state</param>
            <returns>JSON patch representing the differences between the last and new states</returns>
        </member>
        <member name="T:DuetRestEndpoint.Services.ModelUpdateService">
            <summary>
            Service worker that keeps the internal JSON-based machine model up-to-date.
            Note that this service does not - at any point - deserialize the object model. This is due to performance reasons
            </summary>
        </member>
        <member name="F:DuetRestEndpoint.Services.ModelUpdateService.SocketPath">
            <summary>
            Path to the UNIX socket. This is assigned by the Startup class
            </summary>
        </member>
        <member name="M:DuetRestEndpoint.Services.ModelUpdateService.#ctor(Microsoft.Extensions.Logging.ILogger{DuetRestEndpoint.Services.ModelUpdateService})">
            <summary>
            Create a new instance of the model background service
            </summary>
            <param name="logger">Logger</param>
        </member>
        <member name="M:DuetRestEndpoint.Services.ModelUpdateService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Start the model service
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Base task</returns>
        </member>
        <member name="M:DuetRestEndpoint.Services.ModelUpdateService.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Represents the full lifecycle of this service
            </summary>
            <param name="cancellationToken">Invoked when the service is being terminated</param>
            <returns>Service task</returns>
        </member>
        <member name="M:DuetRestEndpoint.Services.ModelUpdateService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Stop the model service
            </summary>
            <param name="cancellationToken">Cancellation token</param>
            <returns>Base task</returns>
        </member>
        <member name="T:DuetRestEndpoint.Startup">
            <summary>
            Class used to start the ASP.NET Core endpoint
            </summary>
        </member>
        <member name="M:DuetRestEndpoint.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Create a new Startup instance
            </summary>
            <param name="configuration">Launch configuration (see appsettings.json)</param>
        </member>
        <member name="M:DuetRestEndpoint.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure web services and add service to the container
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:DuetRestEndpoint.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Configure the HTTP request pipeline
            </summary>
            <param name="app">Application builder</param>
            <param name="env">Hosting environment</param>
        </member>
    </members>
</doc>
